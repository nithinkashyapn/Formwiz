{"version":3,"sources":["home.js","form/basic.js","form/location.js","form/submit.js","helper.js","form.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","react_router_dom","to","className","Component","BasicPage","componentDidMount","formik_esm","type","name","placeholder","LocationPage","SubmitPage","DisplayFormikState","props","style","margin","fontFamily","background","fontSize","padding","JSON","stringify","WizardForm","state","submitted","handleSubmit","data","console","log","_this","setState","history","push","react_router","when","this","message","_ref","pathname","matchPath","path","initialValues","email","firstName","lastName","address","city","zipCode","tos","onSubmit","from","exact","render","routeProps","basic","Object","assign","form_location","form_submit","helper_DisplayFormikState","App","Fragment","component","Form","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9417b77e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Home extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Link to=\"/form/basic\" className=\"next\">\n\t\t\t\t\tBasic\n\t\t\t\t</Link>\n\t\t\t\tYou're home!\n\t\t\t</div>\n\t\t);\n\t}\n}\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Field } from \"formik\";\n\nclass BasicPage extends Component {\n\tcomponentDidMount = () => {\n\t\t// this.props.setFieldValue(this.props.values, \"NININNINININIINNINI\");\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<Field type=\"email\" name=\"email\" placeholder=\"Email\" />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Field\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\tplaceholder=\"First Name\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Field\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\tplaceholder=\"Last Name\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<Link to=\"/form/location\" className=\"next\">\n\t\t\t\t\tNext\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default BasicPage;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Field } from \"formik\";\n\nclass LocationPage extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<Field type=\"text\" name=\"address\" placeholder=\"Address\" />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Field type=\"text\" name=\"city\" placeholder=\"City\" />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Field type=\"text\" name=\"state\" placeholder=\"State\" />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Field type=\"text\" name=\"zipCode\" placeholder=\"Zip Code\" />\n\t\t\t\t</div>\n\t\t\t\t<Link to=\"/form/basic\" className=\"next\">\n\t\t\t\t\tBack\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/form/submit\" className=\"next\">\n\t\t\t\t\tNext\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default LocationPage;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Field } from \"formik\";\n\nclass SubmitPage extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<Field type=\"checkbox\" name=\"tos\" />I agree to the TOS\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<Link to=\"/form/location\" className=\"next\">\n\t\t\t\t\tBack\n\t\t\t\t</Link>\n\t\t\t\t<button className=\"next\">Submit</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SubmitPage;\n","import React from \"react\";\n\nexport const DisplayFormikState = props => (\n\t<div style={{ margin: \"1rem 0\" }}>\n\t\t<h3 style={{ fontFamily: \"monospace\" }}>Values</h3>\n\t\t<pre\n\t\t\tstyle={{\n\t\t\t\tbackground: \"#f6f8fa\",\n\t\t\t\tfontSize: \".65rem\",\n\t\t\t\tpadding: \".5rem\"\n\t\t\t}}>\n\t\t\t<strong>props</strong> = {JSON.stringify(props, null, 2)}\n\t\t</pre>\n\t</div>\n);\n","import React, { Component } from \"react\";\nimport { Switch, Route, Prompt, Redirect, matchPath } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport BasicPage from \"./form/basic\";\nimport LocationPage from \"./form/location\";\nimport SubmitPage from \"./form/submit\";\nimport { DisplayFormikState } from \"./helper\";\n\nclass WizardForm extends Component {\n\tstate = {\n\t\tsubmitted: false\n\t};\n\thandleSubmit = data => {\n\t\tconsole.log(data);\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tsubmitted: true\n\t\t\t},\n\t\t\t() => this.props.history.push(\"/\")\n\t\t);\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Prompt\n\t\t\t\t\twhen={!this.state.submitted}\n\t\t\t\t\tmessage={({ pathname }) => {\n\t\t\t\t\t\treturn matchPath(pathname, { path: \"/form\" })\n\t\t\t\t\t\t\t? true\n\t\t\t\t\t\t\t: \"Are you sure you want to navigate away?\";\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\temail: \"\",\n\t\t\t\t\t\tfirstName: \"\",\n\t\t\t\t\t\tlastName: \"\",\n\t\t\t\t\t\taddress: \"\",\n\t\t\t\t\t\tcity: \"\",\n\t\t\t\t\t\tstate: \"\",\n\t\t\t\t\t\tzipCode: \"\",\n\t\t\t\t\t\ttos: false\n\t\t\t\t\t}}\n\t\t\t\t\tonSubmit={this.handleSubmit}>\n\t\t\t\t\t{props => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Form props={props}>\n\t\t\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t\t\t<Redirect\n\t\t\t\t\t\t\t\t\t\t\tfrom=\"/form\"\n\t\t\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\t\t\tto=\"/form/basic\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\t\t\tpath=\"/form/basic\"\n\t\t\t\t\t\t\t\t\t\t\trender={routeProps => (\n\t\t\t\t\t\t\t\t\t\t\t\t<BasicPage\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...routeProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\t\t\tpath=\"/form/location\"\n\t\t\t\t\t\t\t\t\t\t\trender={routeProps => (\n\t\t\t\t\t\t\t\t\t\t\t\t<LocationPage\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...routeProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\t\t\tpath=\"/form/submit\"\n\t\t\t\t\t\t\t\t\t\t\trender={routeProps => (\n\t\t\t\t\t\t\t\t\t\t\t\t<SubmitPage\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...routeProps}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t<DisplayFormikState {...props} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t</Formik>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default WizardForm;\n","import React from \"react\";\nimport Home from \"./home\";\nimport Form from \"./form\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App() {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t\t<Route path=\"/form\" component={Form} />\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}